#!/bin/bash

# Include the functions file
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]] ; then
    DIR="$PWD"
fi
. "$DIR/func"

# Source files
itemrow=rows/item

# Parse input arguments
src_file=$1
dst_file=$2
var_file=$3

# Number of items on the invoice
items=0

# Get current date values
d=$(date '+%d')
m=$(date '+%-m')
y=$(date '+%Y')

# Get invoice number (from environment variable)
nr=$(printf"%06d" "1")
: '
TODO:
    + register env variable for $nr generation
    + increment it after successful script execution
'

# Create a new invoice file
cp $src_file $dst_file

# Count lines in the file containing variables
lines=$(wc -l < $3)

# Read each variable
for (( i=1; $i <= lines; i++ )) ; do
    # Get i-th line of a var_file
	line=$(sed -n ""$i"p" $var_file)

    # Get variable name and its value (separated by '=' character)
	var=$(echo $line | cut -d'=' -f1)
	val=$(echo $line | cut -d'=' -f2)

    # Check if current line is header (starts with '[')
	if [[ $var == \[* ]] ; then
        # Clear this line variable		
        val=""

        # Check if it's for another item of an invoice
		if [[ $var == "[Item]" ]] ; then
			# Go to the next line
			((i++))
			
			# If it's another item, add new row in items table
			if [ $items -ne 0 ] ; then
                sed -i '/itemrowend/ r $itemrow' $2
			fi
			
			# Get variable name and its value (separated by '=' character)
			var=$(echo $line | cut -d'=' -f1)
			val=$(echo $line | cut -d'=' -f2)
			
			# Check if both variable name and variable are not NULL
			if [ -z "$var" ] || [ -z "$val" ] ; then
                printf "Error. Insufficent arguments on line %d\n" "$i"
                exit 1
			fi
			
			if [ "$var" == "item_tax_rate" ]; then
                
			fi
			
			# Insert '#' at the beginning of variable name, so sed will find its position in dst_file
			var="#${var}"
			
			# Replace all occurences of $var with $val
			replace $var $val $dst_file
			
			# Quantity of items on the invoice - increment
			((items++))
			: '
            TODO:
                + calculate gross values
            '
		fi

    # If it's not a header, check if both variable name and variable are not NULL
	elif [ -z "$var" ] || [ -z "$val" ] ; then
		printf "Error. Insufficent arguments on line %d\n" "$i"
		exit 1

    # If it goes here, it means we have valid variable line, perform an insertion
	else
		:
        # Insert '#' at the beginning of variable name, so sed will find its position in dst_file
        var="#${var}"

        # Replace all occurreneces of $var with $val
        replace $var $val $dst_file
	fi
done

# sed -i "s/"#invoice_no"/"FV123456"/" $dst_file

